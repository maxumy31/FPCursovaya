"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/gameWindow/page",{

/***/ "(app-pages-browser)/./src/app/gameWindow/WebsocketManipulations.ts":
/*!******************************************************!*\
  !*** ./src/app/gameWindow/WebsocketManipulations.ts ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParseMessage: () => (/* binding */ ParseMessage),\n/* harmony export */   PrepareConnectionMessage: () => (/* binding */ PrepareConnectionMessage),\n/* harmony export */   PrepareLeavingMessage: () => (/* binding */ PrepareLeavingMessage),\n/* harmony export */   PrepareRevealCardMessage: () => (/* binding */ PrepareRevealCardMessage),\n/* harmony export */   PrepareStartGameMessage: () => (/* binding */ PrepareStartGameMessage),\n/* harmony export */   PrepareVotingMessage: () => (/* binding */ PrepareVotingMessage),\n/* harmony export */   parseGameStateMessage: () => (/* binding */ parseGameStateMessage),\n/* harmony export */   transformToVotingsState: () => (/* binding */ transformToVotingsState)\n/* harmony export */ });\n/* harmony import */ var fp_ts_lib_Option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fp-ts/lib/Option */ \"(app-pages-browser)/./node_modules/fp-ts/lib/Option.js\");\n/* harmony import */ var fp_ts_lib_Option__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fp_ts_lib_Option__WEBPACK_IMPORTED_MODULE_0__);\n\nconst PrepareConnectionMessage = (userId, sessionId)=>{\n    return {\n        \"operationType\": \"reserveNewConnection\",\n        \"data\": {\n            \"id\": userId,\n            \"sessionId\": sessionId\n        }\n    };\n};\nconst PrepareRevealCardMessage = (userId, cardId, sessionId)=>{\n    return {\n        \"operationType\": \"revealCard\",\n        \"data\": {\n            \"id\": userId,\n            \"sessionId\": sessionId,\n            //Да. Поле явно число, но если прислать число на скалу, то цирк(circe) не сможет ее распарсить :3\n            \"cardId\": String(cardId)\n        }\n    };\n};\nconst PrepareStartGameMessage = (userId, sessionId)=>{\n    return {\n        \"operationType\": \"startGame\",\n        \"data\": {\n            \"id\": userId,\n            \"sessionId\": sessionId\n        }\n    };\n};\nconst PrepareVotingMessage = (userId, sessionId, targetId)=>{\n    return {\n        \"operationType\": \"voteFor\",\n        data: {\n            \"id\": userId,\n            \"targetId\": targetId,\n            \"sessionId\": sessionId\n        }\n    };\n};\nconst PrepareLeavingMessage = (userId, sessionId)=>{\n    return {\n        \"operationType\": \"voteFor\",\n        \"data\": {\n            \"id\": userId,\n            \"sessionId\": sessionId\n        }\n    };\n};\nconst ParseMessage = (message)=>{\n    return fp_ts_lib_Option__WEBPACK_IMPORTED_MODULE_0__.tryCatch(()=>{\n        const json = JSON.parse(message);\n        const msgType = json[\"type\"];\n        switch(msgType){\n            case \"waitingState\":\n                const players = json[\"players\"];\n                const waitingState = {\n                    \"type\": msgType,\n                    \"players\": players\n                };\n                return waitingState;\n            case \"playingState\":\n                const a = parseGameStateMessage(json);\n                console.log(a);\n                return a;\n            case \"votingState\":\n        }\n        throw new Error(\"Cannot parse\");\n    });\n};\nfunction parseGameStateMessage(json) {\n    if (typeof json !== \"object\" || json === null) {\n        throw new Error(\"Invalid JSON structure\");\n    }\n    const parseReveableCard = (cardData)=>{\n        if (!Array.isArray(cardData) || cardData.length !== 2) {\n            throw new Error(\"Invalid card format\");\n        }\n        const [card, isRevealed] = cardData;\n        const cardTypeKey = Object.keys(card.cardType)[0];\n        return {\n            cardType: cardTypeKey,\n            description: card.description,\n            isRevealed: Boolean(isRevealed)\n        };\n    };\n    // Парсинг игроков\n    const parsePlayers = (playersData)=>{\n        return playersData.map((playerData)=>{\n            if (!Array.isArray(playerData) || playerData.length !== 2) {\n                throw new Error(\"Invalid player format\");\n            }\n            const [id, cardsData] = playerData;\n            return {\n                id: String(id),\n                cards: cardsData.map(parseReveableCard)\n            };\n        });\n    };\n    // Парсинг бункерных карт\n    const parseBunkerCards = (cardsData)=>{\n        return cardsData.map((cardData)=>({\n                ...parseReveableCard(cardData),\n                // Для бункерных карт принудительно выставляем тип\n                cardType: \"Bunker\"\n            }));\n    };\n    // Основной парсинг\n    return {\n        type: \"playingState\",\n        round: Number(json.round),\n        turn: Number(json.turn),\n        players: parsePlayers(json.players),\n        apokalipsis: {\n            ...parseReveableCard([\n                json.apokalipsisCard,\n                true\n            ]),\n            cardType: \"Apokalipsis\"\n        },\n        bunkerCards: parseBunkerCards(json.bunkerCards)\n    };\n}\nfunction transformToVotingsState(rawData) {\n    // Преобразование карт из формата [cardData, isRevealed] в ReveableCard\n    const transformCards = (cardsArray)=>cardsArray.map((param)=>{\n            let [cardData, isRevealed] = param;\n            return {\n                cardType: cardData.cardType,\n                description: cardData.description,\n                isRevealed\n            };\n        });\n    return {\n        type: \"votingsState\",\n        players: rawData.playersAndVotes.map((playerData)=>({\n                id: playerData[0],\n                voted: playerData[1],\n                cards: transformCards(playerData[2])\n            })),\n        round: rawData.turn,\n        apokalipsis: {\n            cardType: rawData.apokalipsisCard.cardType,\n            description: rawData.apokalipsisCard.description,\n            isRevealed: true // По умолчанию для апокалипсис-карты\n        },\n        bunkerCards: rawData.bunkerCards.map((card)=>({\n                ...card,\n                isRevealed: true // Или другое значение в зависимости от логики\n            }))\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/gameWindow/WebsocketManipulations.ts\n"));

/***/ })

});