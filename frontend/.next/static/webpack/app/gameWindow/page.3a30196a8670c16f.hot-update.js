"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/gameWindow/page",{

/***/ "(app-pages-browser)/./src/app/LazyQueue.ts":
/*!******************************!*\
  !*** ./src/app/LazyQueue.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NewLazyQueue: () => (/* binding */ NewLazyQueue)\n/* harmony export */ });\nconst NewLazyQueue = ()=>{\n    return ()=>{\n        let queue = [];\n        let resolvers = [];\n        return {\n            Add: (item)=>()=>{\n                    if (resolvers.length > 0) {\n                        const { resolve } = resolvers.shift();\n                        resolve(item);\n                    } else {\n                        queue.push(item);\n                    }\n                },\n            Read: ()=>{\n                return new Promise((resolve, reject)=>{\n                    if (queue.length > 0) {\n                        const item = queue.shift();\n                        resolve(item);\n                    } else {\n                        resolvers.push({\n                            resolve,\n                            reject\n                        });\n                    }\n                });\n            },\n            CancelAll: (error)=>()=>{\n                    resolvers.forEach((param)=>{\n                        let { reject } = param;\n                        return reject(error);\n                    });\n                    resolvers = [];\n                    queue = [];\n                }\n        };\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvTGF6eVF1ZXVlLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFpQk8sTUFBTUEsZUFBZTtJQUMxQixPQUFPO1FBQ0gsSUFBSUMsUUFBYSxFQUFFO1FBQ25CLElBQUlDLFlBQTJCLEVBQUU7UUFFakMsT0FBTztZQUNIQyxLQUFLLENBQUNDLE9BQVk7b0JBQ2QsSUFBSUYsVUFBVUcsTUFBTSxHQUFHLEdBQUc7d0JBQ3RCLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUdKLFVBQVVLLEtBQUs7d0JBQ25DRCxRQUFRRjtvQkFDWixPQUFPO3dCQUNISCxNQUFNTyxJQUFJLENBQUNKO29CQUNmO2dCQUNKO1lBQ0FLLE1BQU07Z0JBQ0YsT0FBTyxJQUFJQyxRQUFXLENBQUNKLFNBQVNLO29CQUM1QixJQUFJVixNQUFNSSxNQUFNLEdBQUcsR0FBRzt3QkFDbEIsTUFBTUQsT0FBT0gsTUFBTU0sS0FBSzt3QkFDeEJELFFBQVFGO29CQUNaLE9BQU87d0JBQ0hGLFVBQVVNLElBQUksQ0FBQzs0QkFBRUY7NEJBQVNLO3dCQUFPO29CQUNyQztnQkFDSjtZQUNKO1lBQ0FDLFdBQVcsQ0FBQ0MsUUFBaUI7b0JBQ3pCWCxVQUFVWSxPQUFPLENBQUM7NEJBQUMsRUFBRUgsTUFBTSxFQUFFOytCQUFLQSxPQUFPRTs7b0JBQ3pDWCxZQUFZLEVBQUU7b0JBQ2RELFFBQVEsRUFBRTtnQkFDZDtRQUNKO0lBQ0o7QUFDRixFQUFFIiwic291cmNlcyI6WyJJOlxcU2NhbGFDdXJzb3ZheWFcXEJ1bmtlcldlYlxcZnJvbnRlbmRcXHNyY1xcYXBwXFxMYXp5UXVldWUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgRSBmcm9tIFwiZnAtdHMvRWl0aGVyXCI7XHJcbmltcG9ydCAqIGFzIFRFIGZyb20gXCJmcC10cy9UYXNrRWl0aGVyXCI7XHJcbmltcG9ydCAqIGFzIElPIGZyb20gXCJmcC10cy9JT1wiO1xyXG5pbXBvcnQgKiBhcyBUTyBmcm9tIFwiZnAtdHMvVGFza09wdGlvblwiO1xyXG5pbXBvcnQgeyBwaXBlIH0gZnJvbSBcImZwLXRzL2Z1bmN0aW9uXCI7XHJcblxyXG50eXBlIFJlc29sdmVyPFQ+ID0ge1xyXG4gIHJlc29sdmU6ICh2YWx1ZSA6IFQpID0+IHZvaWRcclxuICByZWplY3Q6IChyZWFzb24/OnVua25vd24pPT52b2lkXHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIExhenlRdWV1ZTxUPiA9IHtcclxuICByZWFkb25seSBBZGQ6IChkYXRhOiBUKSA9PiBJTy5JTzx2b2lkPjtcclxuICByZWFkb25seSBSZWFkOiAoKSA9PiBQcm9taXNlPFQ+O1xyXG4gIHJlYWRvbmx5IENhbmNlbEFsbDogKGVycm9yOiBFcnJvcikgPT4gSU8uSU88dm9pZD47XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgTmV3TGF6eVF1ZXVlID0gPFQ+KCk6IElPLklPPExhenlRdWV1ZTxUPj4gPT4ge1xyXG4gIHJldHVybiAoKSA9PiB7XHJcbiAgICAgIGxldCBxdWV1ZTogVFtdID0gW11cclxuICAgICAgbGV0IHJlc29sdmVyczogUmVzb2x2ZXI8VD5bXSA9IFtdXHJcblxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgQWRkOiAoaXRlbTogVCkgPT4gKCkgPT4ge1xyXG4gICAgICAgICAgICAgIGlmIChyZXNvbHZlcnMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICBjb25zdCB7IHJlc29sdmUgfSA9IHJlc29sdmVycy5zaGlmdCgpIVxyXG4gICAgICAgICAgICAgICAgICByZXNvbHZlKGl0ZW0pXHJcbiAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgcXVldWUucHVzaChpdGVtKVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBSZWFkOiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlPFQ+KChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgICAgICAgaWYgKHF1ZXVlLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW0gPSBxdWV1ZS5zaGlmdCgpIVxyXG4gICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShpdGVtKVxyXG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZXJzLnB1c2goeyByZXNvbHZlLCByZWplY3QgfSlcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIENhbmNlbEFsbDogKGVycm9yOiBFcnJvcikgPT4gKCkgPT4ge1xyXG4gICAgICAgICAgICAgIHJlc29sdmVycy5mb3JFYWNoKCh7IHJlamVjdCB9KSA9PiByZWplY3QoZXJyb3IpKVxyXG4gICAgICAgICAgICAgIHJlc29sdmVycyA9IFtdXHJcbiAgICAgICAgICAgICAgcXVldWUgPSBbXVxyXG4gICAgICAgICAgfSxcclxuICAgICAgfTtcclxuICB9O1xyXG59O1xyXG4iXSwibmFtZXMiOlsiTmV3TGF6eVF1ZXVlIiwicXVldWUiLCJyZXNvbHZlcnMiLCJBZGQiLCJpdGVtIiwibGVuZ3RoIiwicmVzb2x2ZSIsInNoaWZ0IiwicHVzaCIsIlJlYWQiLCJQcm9taXNlIiwicmVqZWN0IiwiQ2FuY2VsQWxsIiwiZXJyb3IiLCJmb3JFYWNoIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/LazyQueue.ts\n"));

/***/ })

});