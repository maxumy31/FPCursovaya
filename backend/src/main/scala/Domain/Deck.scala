package Domain

import Domain.CardType.*

case class Deck(cards:Seq[Card], revealed:Seq[Boolean])

object TestDeck {
  def apply(): Deck = {
    val professionCards = List(
      "Врач", "Инженер", "Учитель", "Повар", "Пилот",
      "Строитель", "Программист", "Ученый", "Фермер", "Полицейский"
    ).map(Card(Profession, _))

    val biologyCards = List(
      "Мужчина 18 лет", "Женщина 22 года", "Мужчина 25 лет",
      "Женщина 30 лет", "Мужчина 35 лет", "Женщина 40 лет",
      "Мужчина 45 лет", "Женщина 50 лет", "Мужчина 55 лет",
      "Женщина 60 лет"
    ).map(Card(Biology, _))

    val healthCards = List(
      "Здоров", "Астма", "Протез ноги", "Слепота", "Глухота",
      "Эпилепсия", "Гипертония", "Иммунитет", "Аллергия", "Хроническая боль"
    ).map(Card(Health, _))

    val hobbyCards = List(
      "Футбол", "Шахматы", "Рисование", "Готовка", "Программирование",
      "Охота", "Садоводство", "Фотография", "Плавание", "Чтение"
    ).map(Card(Hobby, _))

    val itemCards = List(
      "Фонарик", "Аптечка", "Нож", "Радио", "Карта",
      "Компас", "Веревка", "Спички", "Консервы", "Бинокль"
    ).map(Card(Item, _))

    val factCards = List(
      "Бывший военный", "Судимость", "Знает 5 языков", "Орнитолог",
      "Кладоискатель", "Вегетарианец", "Атеист", "Альпинист", "Дальтоник", "Фобия змей"
    ).map(Card(Fact, _))

    val specialCards = List(
      "Лидер", "Оптимист", "Пессимист", "Дипломат", "Стратег",
      "Харизматик", "Технарь", "Выживальщик", "Параноик", "Гений"
    ).map(Card(Special, _))

    val apocalypseCards = List(
      "Ядерная зима", "Пандемия", "Инопланетное вторжение", "Климатическая катастрофа",
      "Восстание машин", "Зомби-апокалипсис", "Падение астероида", "Солнечная вспышка",
      "Биологическое оружие", "Вулканическая зима"
    ).map(Card(Apokalipsis, _))

    val bunkerCards = List(
      "Подземное убежище", "Запас на 5 лет", "Система очистки", "Гидропоника",
      "Генератор кислорода", "Радиостанция", "Медблок", "Арсенал",
      "Лаборатория", "Библиотека"
    ).map(Card(Bunker, _))

    val threatCards = List(
      "Мутировавшие насекомые", "Радиация", "Голод", "Бунт",
      "Нехватка кислорода", "Психические расстройства", "Вирусная мутация",
      "Отравление воды", "Обрушение тоннеля", "Электромагнитный импульс"
    ).map(Card(Threat, _))

    val allCards = professionCards ++ biologyCards ++ healthCards ++ hobbyCards ++
      itemCards ++ factCards ++ specialCards ++ apocalypseCards ++ bunkerCards ++ threatCards

    Deck(
      cards = allCards,
      revealed = Vector.fill(100)(false)
    )
  }
}
